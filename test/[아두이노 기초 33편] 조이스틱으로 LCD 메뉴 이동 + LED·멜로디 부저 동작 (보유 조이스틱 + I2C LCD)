#include <Arduino.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// I2C 주소는 0x27이 일반적입니다. 필요 시 0x3F로 변경하세요.
LiquidCrystal_I2C lcd(0x27, 16, 2);

// 핀 설정
const int X_PIN = A0;        // 조이스틱 X (좌우)
const int Y_PIN = A1;        // 조이스틱 Y (상하)
const int SW_PIN = 2;        // 조이스틱 버튼(눌리면 LOW), 내부 풀업
const int LED_PIN = 8;       // LED
const int BUZZER_PIN = 7;    // 수동부저

// 메뉴 항목
const char* MENU_ITEMS[] = {"LED ON", "LED OFF", "BUZZER"};
const int MENU_COUNT = sizeof(MENU_ITEMS) / sizeof(MENU_ITEMS[0]);
int selected = 0;            // 현재 선택 인덱스
int topIndex = 0;            // 16x2 화면 윈도우 시작 인덱스

// 조작 임계치/디바운스
const int LOWER_TH = 400;    // 위로 밀기(값 작아짐)
const int UPPER_TH = 600;    // 아래로 밀기(값 커짐)
const unsigned long MOVE_DELAY = 220;   // 메뉴 이동 최소 간격(ms)
const unsigned long PRESS_DELAY = 220;  // 버튼 디바운스(ms)
unsigned long lastMoveMs = 0;
unsigned long lastPressMs = 0;

void drawMenu() {
  lcd.clear();
  for (int row = 0; row < 2; row++) {
    int idx = (topIndex + row) % MENU_COUNT;
    lcd.setCursor(0, row);
    if (idx == selected) lcd.print("> ");
    else                 lcd.print("  ");
    lcd.print(MENU_ITEMS[idx]);
  }
}

void selectUp() {
  if (millis() - lastMoveMs < MOVE_DELAY) return;
  selected = (selected - 1 + MENU_COUNT) % MENU_COUNT;
  topIndex = selected; // 선택에 맞춰 윈도우 이동
  lastMoveMs = millis();
  drawMenu();
}

void selectDown() {
  if (millis() - lastMoveMs < MOVE_DELAY) return;
  selected = (selected + 1) % MENU_COUNT;
  topIndex = selected; // 선택에 맞춰 윈도우 이동
  lastMoveMs = millis();
  drawMenu();
}

void playMelody() {
  // 도레미파솔라시도 간단 멜로디
  const int notes[] = {262, 294, 330, 349, 392, 440, 494, 523}; // C D E F G A B C
  const int dur = 180;
  for (int i = 0; i < 8; i++) {
    tone(BUZZER_PIN, notes[i], dur);
    delay(dur + 40);
  }
  noTone(BUZZER_PIN);
}

void doAction(int idx) {
  if (idx == 0) {
    digitalWrite(LED_PIN, HIGH);
    lcd.setCursor(0, 1);
    lcd.print("> LED ON         ");
  } else if (idx == 1) {
    digitalWrite(LED_PIN, LOW);
    lcd.setCursor(0, 1);
    lcd.print("> LED OFF        ");
  } else if (idx == 2) {
    playMelody();
    lcd.setCursor(0, 1);
    lcd.print("> BUZZER MELODY  ");
  }
}

void setup() {
  pinMode(SW_PIN, INPUT_PULLUP);
  pinMode(LED_PIN, OUTPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  digitalWrite(LED_PIN, LOW);
  noTone(BUZZER_PIN);

  lcd.init();
  lcd.backlight();

  topIndex = selected;
  drawMenu();
}

void loop() {
  int yVal = analogRead(Y_PIN);
  int swState = digitalRead(SW_PIN); // 눌리면 LOW

  if (yVal < LOWER_TH) selectUp();
  else if (yVal > UPPER_TH) selectDown();

  if (swState == LOW && millis() - lastPressMs > PRESS_DELAY) {
    lastPressMs = millis();
    doAction(selected);
  }

  delay(20);
}
