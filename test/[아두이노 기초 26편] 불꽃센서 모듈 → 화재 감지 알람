// [아두이노 기초 26편] 불꽃센서 모듈 → 화재 감지 알람
// 하드웨어 연결 요약:
// Flame Sensor: VCC→5V, GND→GND, AO→A0, DO→D2
// Buzzer: +→D8, -→GND
// Red LED: +→D9, -→220Ω→GND
#include <Arduino.h>
const int FLAME_AO = A0;      // 아날로그 감지값
const int FLAME_DO = 2;       // 디지털 트리거(보드 가변저항으로 임계값 조절)
const int BUZZER    = 8;       // 경보음 핀
const int LED_RED   = 9;       // 경고 LED

// 일부 보드는 불꽃 감지 시 DO가 LOW가 됩니다. 필요 시 아래 상수만 바꾸면 됩니다.
const bool DO_ACTIVE_LOW = true;   // 감지 시 LOW면 true, HIGH면 false

// 경보 유지 시간 및 딜레이
const unsigned long ALARM_HOLD_MS = 5000;  // 화재 감지 후 최소 유지 5초
const unsigned long SAMPLE_MS     = 50;    // 샘플링 주기

// 아날로그 필터(지수이동평균)로 값 흔들림 완화
float ema = 0.0f;
const float alpha = 0.2f;  // 0.1~0.3 권장
unsigned long lastSample = 0;

bool alarmOn = false;
unsigned long alarmStart = 0;

void setup() {
  pinMode(FLAME_DO, INPUT);
  pinMode(BUZZER, OUTPUT);
  pinMode(LED_RED, OUTPUT);
  digitalWrite(BUZZER, LOW);
  digitalWrite(LED_RED, LOW);

  Serial.begin(9600);
  // 초기 EMA 시드
  int raw = analogRead(FLAME_AO);
  ema = raw;

  Serial.println(F("Flame Alarm Ready"));
  Serial.println(F("조정 팁: 센서 보드의 가변저항을 돌려 DO가 주변광에서 비감지(OFF)가 되도록 맞춘 후 불꽃을 가까이해 감지(ON)가 되도록 설정하세요."));
  Serial.println(F("DO 극성 안내: DO_ACTIVE_LOW=true이면 감지 시 LOW, false이면 감지 시 HIGH입니다."));
}

void loop() {
  // 주기 샘플링
  if (millis() - lastSample >= SAMPLE_MS) {
    lastSample = millis();

    int ao = analogRead(FLAME_AO);
    ema = alpha * ao + (1.0f - alpha) * ema;

    int doRaw = digitalRead(FLAME_DO);
    bool detected = DO_ACTIVE_LOW ? (doRaw == LOW) : (doRaw == HIGH);

    // 디지털 감지 우선으로 경보 제어
    if (detected && !alarmOn) {
      alarmOn = true;
      alarmStart = millis();
      digitalWrite(BUZZER, HIGH);
      digitalWrite(LED_RED, HIGH);
    }

    // 경보 유지 시간 경과 후, 감지 해제 시 OFF
    if (alarmOn) {
      bool holdElapsed = (millis() - alarmStart) >= ALARM_HOLD_MS;
      if (holdElapsed && !detected) {
        alarmOn = false;
        digitalWrite(BUZZER, LOW);
        digitalWrite(LED_RED, LOW);
      }
    }

    // 상태 출력
    Serial.print(F("AO=")); Serial.print(ao);
    Serial.print(F(" EMA=")); Serial.print(ema, 1);
    Serial.print(F(" DO=")); Serial.print(doRaw);
    Serial.print(F(" DETECTED=")); Serial.print(detected ? F("YES") : F("NO"));
    Serial.print(F(" ALARM=")); Serial.println(alarmOn ? F("ON") : F("OFF"));
  }
}
