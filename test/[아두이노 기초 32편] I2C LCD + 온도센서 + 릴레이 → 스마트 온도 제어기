#include <Arduino.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <DHT.h>

// ----- 사용자 설정 -----
#define DHTPIN 7
#define DHTTYPE DHT11
const int RELAY_PIN = 8;          // 다수의 릴레이 모듈은 LOW가 ON
const float ON_THRESHOLD  = 27.2; // 온도 ≥ 28℃ → 릴레이 ON
const float OFF_THRESHOLD = 27.1; // 온도 ≤ 26℃ → 릴레이 OFF (히스테리시스)

// I2C LCD 주소: 흔히 0x27, 일부는 0x3F
LiquidCrystal_I2C lcd(0x27, 16, 2);
DHT dht(DHTPIN, DHTTYPE);

// 릴레이가 LOW 활성(LOW=ON, HIGH=OFF)인 모듈을 가정
bool relayActiveLow = false;
bool relayState = false; // false=OFF, true=ON

unsigned long lastReadMs = 0;
const unsigned long readInterval = 1500; // 1.5초 주기

void setRelay(bool on) {
  relayState = on;
  if (relayActiveLow) {
    digitalWrite(RELAY_PIN, on ? LOW : HIGH);
  } else {
    digitalWrite(RELAY_PIN, on ? HIGH : LOW);
  }
}

void setup() {
  pinMode(RELAY_PIN, OUTPUT);
  // 초기 OFF
  if (relayActiveLow) digitalWrite(RELAY_PIN, HIGH);
  else                digitalWrite(RELAY_PIN, LOW);

  dht.begin();
  lcd.init();
  lcd.backlight();

  lcd.setCursor(0,0);
  lcd.print("Smart Temp Ctrl");
  lcd.setCursor(0,1);
  lcd.print("Init...");
  delay(1000);
  lcd.clear();

  Serial.begin(9600);
  Serial.println(F("DHT11 + I2C LCD + Relay"));
}

void loop() {
  unsigned long now = millis();
  if (now - lastReadMs < readInterval) return;
  lastReadMs = now;

  float h = dht.readHumidity();
  float t = dht.readTemperature(); // 섭씨

  if (isnan(h) || isnan(t)) {
    lcd.setCursor(0,0);
    lcd.print("Sensor Error    ");
    lcd.setCursor(0,1);
    lcd.print("Check DHT       ");
    Serial.println(F("DHT read error"));
    return;
  }

  // 히스테리시스 제어
  if (!relayState && t >= ON_THRESHOLD) {
    setRelay(true);
  } else if (relayState && t <= OFF_THRESHOLD) {
    setRelay(false);
  }

  // LCD 표시
  lcd.setCursor(0,0);
  lcd.print("T:");
  lcd.print(t,1);
  lcd.print((char)223); // '°' 기호 대체
  lcd.print("C  ");

  lcd.setCursor(8,0);
  lcd.print("H:");
  lcd.print(h,0);
  lcd.print("%  ");

  lcd.setCursor(0,1);
  lcd.print("Relay:");
  lcd.print(relayState ? "ON " : "OFF");
  lcd.print(" Thr ");
  lcd.print((relayState ? OFF_THRESHOLD : ON_THRESHOLD),0);
  lcd.print("C ");

  // 시리얼 로깅
  Serial.print(F("T=")); Serial.print(t,1);
  Serial.print(F("C, H=")); Serial.print(h,0);
  Serial.print(F("%, RELAY=")); Serial.println(relayState ? "ON" : "OFF");
}
