#include <Arduino.h>

/*
  TCRT5000 Proximity Sensor Test (AO + DO + LED)
  - VCC -> 5V, GND -> GND
  - AO  -> A0  (아날로그 값 0~1023)
  - DO  -> D2  (디지털 값 0/1, 트리머로 임계값 조정)
  - LED -> D3  (외부 표시용, 선택 사항 / 긴다리(+) -> 220Ω -> D3, 짧은다리(-) -> GND)

  시리얼 모니터: 9600 baud
  VS Code(PlatformIO) 사용 시 platformio.ini에 monitor_speed = 9600 권장
*/

// ================= 사용자 설정 =================
const int PIN_DO  = 2;      // 센서 DOUT
const int PIN_AO  = A0;     // 센서 AOUT
const int PIN_LED = 3;      // 외부 LED(선택)

const bool USE_EXT_LED = true;   // 외부 LED 사용 시 true
const bool INVERT_DO   = true;   // 많은 모듈이 "감지 시 LOW"이므로 기본 true
// ===============================================

// 간단한 지수 이동평균(EMA)로 AO를 약간 부드럽게 보기 위한 설정
static long ema = -1;
const uint8_t ALPHA = 32; // 0~255 (값이 클수록 반응 빠름)

int readAOFiltered() {
  int v = analogRead(PIN_AO);
  if (ema < 0) ema = (long)v << 8;                  // 첫 샘플 초기화
  ema = ema + (((long)v << 8) - ema) * ALPHA / 256; // EMA 업데이트
  return (int)(ema >> 8);
}

void setup() {
  Serial.begin(9600);
  pinMode(PIN_DO, INPUT);
  if (USE_EXT_LED) pinMode(PIN_LED, OUTPUT);

  Serial.println(F("TCRT5000 START"));
  Serial.println(F("Tips: 트리머를 천천히 돌려 DO가 0/1 경계에서 바뀌도록 맞추세요."));
  Serial.println(F("많은 모듈은 '감지 시 LOW(0)'가 됩니다. (INVERT_DO=true 기본 설정)"));
}

void loop() {
  // 1) 센서 읽기
  int dRaw = digitalRead(PIN_DO);   // 원시 DO
  // 모듈 극성 보정: 감지=true 로 통일
  bool detected = INVERT_DO ? (dRaw == LOW) : (dRaw == HIGH);

  int a = readAOFiltered();         // EMA 적용한 AO

  // 2) 외부 LED 제어(선택)
  if (USE_EXT_LED) {
    digitalWrite(PIN_LED, detected ? HIGH : LOW);
  }

  // 3) 시리얼 출력 (모듈 상태 가독성 있게)
  Serial.print(F("DO(raw)=")); Serial.print(dRaw);
  Serial.print(F("  detected=")); Serial.print(detected ? 1 : 0);
  Serial.print(F("  AO=")); Serial.println(a);

  delay(50);
}
